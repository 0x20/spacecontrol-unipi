import org.openhab.model.script.actions.Timer
  
var Timer timer = null

// == Lighting =================================================================================

rule "Front lighting"
when
	Item topLightSwitch received update OPEN or
	Item topLightSwitch received update CLOSED
then
	if (frontLight.state==ON) {
		frontLight.sendCommand(OFF)
	} else if (frontLight.state==OFF) {
		frontLight.sendCommand(ON)
	} else { // after reboot states are "Uninitialized"
		frontLight.sendCommand(ON)
	}

//	if (Space.state!=ON) {
//		if(timer!=null) {
//        	timer.cancel
//            timer = null
//        }
	Space.sendCommand(ON)
//		PowerCeiling.sendCommand(ON)
//		PowerWall.sendCommand(ON)
//	}
end

rule "Back lighting"
when
	Item bottomLightSwitch received update OPEN or
	Item bottomLightSwitch received update CLOSED
then
	if (backLight.state==ON) {
		backLight.sendCommand(OFF)
	} else if (backLight.state==OFF) {
		backLight.sendCommand(ON)
	} else { // after reboot states are "Uninitialized"
		backLight.sendCommand(ON)
	}
//	if (Space.state!=ON) {
//		if(timer!=null) {
//        	timer.cancel
//            timer = null
//        }
		Space.sendCommand(ON)
//		PowerCeiling.sendCommand(ON)
//		PowerWall.sendCommand(ON)
//	}
end

rule "All Off"
when
	Item allOffButton received update OPEN or
	Item allOffButton received update CLOSED
then
	Space.sendCommand(OFF)
//	BackLight.sendCommand(OFF)
//	FrontLight.sendCommand(OFF)
//	sendHttpGetRequest("http://spacecontrol.0x20.be/CMD?Space=OFF")
//	Space.send(OFF)
//	timer = createTimer(now.plusSeconds(300)) [|
//  		PowerCeiling.sendCommand(OFF)
//  		PowerWall.sendCommand(OFF)
//	]
end

// == Door =====================================================================================
		
//rule "Open Door from rest API"
//when
//	Item Door received update ON
//then
//	DoorRelay.sendCommand(ON)
//	createTimer(now.plusSeconds(5)) [|
//  		DoorRelay.sendCommand(OFF)
//	]	
//end


